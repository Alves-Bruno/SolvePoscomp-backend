# Generated by Django 3.1.3 on 2020-12-01 13:01

from django.db import migrations
from django.core.files import File
from pathlib import Path
from django.conf import settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# print(BASE_DIR)

def add_tags_to_questoes_2019(apps, schema_editor):

    Questao = apps.get_model('AppSolvePoscomp', 'Questao')
    Tag = apps.get_model('AppSolvePoscomp', 'Tag')
    QuestaoTags = apps.get_model('AppSolvePoscomp', 'QuestaoTags')
    User = apps.get_model(settings.AUTH_USER_MODEL)
    user = User.objects.get(username='PoscompTeam')
    
    info_file = open(str(BASE_DIR) + '/QUESTOES/2019/INFO-2019.txt', 'r')
    file_line_list = info_file.read().split('\n')
    for line in file_line_list:
        question_info = line.split('_')

        if len(question_info) == 3:
            q_num = int(question_info[0])
            tags = question_info[2].split(',')
            
            if(q_num >= 1 and q_num <= 20):
                tags.append('Matemática')
            elif(q_num >= 21 and q_num <= 50):
                tags.append('Fundamentos da Computação')
            else:
                tags.append('Tecnologia da Computação')

            list_questao = Questao.objects.filter(ano=2019, user_id=user)
            questao = list_questao[q_num - 1]

            for tag_name in tags:
                tag_in_db = Tag.objects.filter(nome=tag_name)
                # Tag already exists:
                if len(tag_in_db) > 0:
                # tag_in_db[0].save()
                    new_questaotags = QuestaoTags(questao_id=questao, tag_id=tag_in_db[0])
                    new_questaotags.save()
                # Tag do not exists:
                else:
                    new_tag = Tag(nome=tag_name)
                    new_tag.save()
                    new_questaotags = QuestaoTags(questao_id=questao, tag_id=new_tag)
                    new_questaotags.save()

def rm_tags_of_questoes_2019(apps, schema_editor):
    Questao = apps.get_model('AppSolvePoscomp', 'Questao')
    QuestaoTags = apps.get_model('AppSolvePoscomp', 'QuestaoTags')
    User = apps.get_model(settings.AUTH_USER_MODEL)
    user = User.objects.get(username='PoscompTeam')


    list_questao = Questao.objects.filter(ano=2019, user_id=user)

    for questao in list_questao:
        list_QTags = QuestaoTags.objects.filter(questao_id=questao)
        for QTag in list_QTags:
            QTag.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('AppSolvePoscomp', '0011_auto_20201201_1001'),
    ]

    operations = [
        migrations.RunPython(add_tags_to_questoes_2019, rm_tags_of_questoes_2019),
    ]
